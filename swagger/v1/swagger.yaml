---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/accommodations":
    get:
      summary: Lists accommodations
      tags:
      - Accommodations
      responses:
        '200':
          description: accommodations listed
  "/api/v1/accommodations/{id}":
    get:
      summary: Retrieves an accommodation
      tags:
      - Accommodations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: accommodation found
        '404':
          description: accommodation not found
  "/api/v1/accommodations/{id}/book":
    post:
      summary: Books an accommodation
      tags:
      - Accommodations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '202':
          description: booking request created
        '404':
          description: accommodation not found
        '422':
          description: booking creation fails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                guest_name:
                  type: string
              required:
              - start_date
              - end_date
              - guest_name
  "/api/v1/apartments":
    get:
      summary: List apartments
      tags:
      - Apartments
      responses:
        '200':
          description: apartments found
    post:
      summary: Create an apartment
      tags:
      - Apartments
      parameters: []
      responses:
        '201':
          description: apartment created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                apartment:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                    location:
                      type: string
                    capacity:
                      type: integer
                    address:
                      type: string
                    amenities_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                  required:
                  - name
                  - price
                  - location
                  - capacity
                  - address
              required:
              - apartment
  "/api/v1/apartments/{id}":
    parameters:
    - name: id
      in: path
      description: Apartment ID
      required: true
      schema:
        type: integer
    get:
      summary: Retrieve an apartment
      tags:
      - Apartments
      responses:
        '200':
          description: apartment found
        '404':
          description: apartment not found
    patch:
      summary: Update an apartment
      tags:
      - Apartments
      parameters: []
      responses:
        '200':
          description: apartment updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                apartment:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - apartment
    delete:
      summary: Delete an apartment
      tags:
      - Apartments
      responses:
        '204':
          description: apartment deleted
        '404':
          description: apartment not found
  "/api/v1/accommodations/{accommodation_id}/bookings":
    parameters:
    - name: accommodation_id
      in: path
      description: Accommodation ID
      required: true
      schema:
        type: integer
    get:
      summary: List all bookings for an accommodation
      tags:
      - Bookings
      responses:
        '200':
          description: bookings found
  "/api/v1/bookings":
    get:
      summary: List all bookings
      tags:
      - Bookings
      responses:
        '200':
          description: all bookings returned
  "/api/v1/bookings/{id}":
    parameters:
    - name: id
      in: path
      description: Booking ID
      required: true
      schema:
        type: integer
    get:
      summary: Retrieve a booking
      tags:
      - Bookings
      responses:
        '200':
          description: booking found
        '404':
          description: booking not found
    patch:
      summary: Update a booking
      tags:
      - Bookings
      parameters: []
      responses:
        '200':
          description: booking updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                booking:
                  type: object
                  properties:
                    guest_name:
                      type: string
                    start_date:
                      type: string
                      format: date
                    end_date:
                      type: string
                      format: date
                  required:
                  - guest_name
              required:
              - booking
    delete:
      summary: Delete a booking
      tags:
      - Bookings
      responses:
        '204':
          description: booking deleted
        '404':
          description: booking not found
  "/api/v1/hotels/{hotel_id}/rooms":
    get:
      summary: Lists rooms for a hotel
      tags:
      - Rooms
      parameters:
      - name: hotel_id
        in: path
        required: true
        schema:
          type: integer
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: rooms listed
        '404':
          description: hotel not found
    post:
      summary: Creates a new room for a hotel
      tags:
      - Rooms
      parameters:
      - name: hotel_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: room created
        '422':
          description: invalid room params
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                room:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                    location:
                      type: string
                    capacity:
                      type: integer
                    address:
                      type: string
                    amenities_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                  required:
                  - name
                  - description
                  - price
                  - location
                  - capacity
                  - address
  "/api/v1/hotels/{hotel_id}/rooms/{id}":
    get:
      summary: Retrieves a single room
      tags:
      - Rooms
      parameters:
      - name: hotel_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: room found
        '404':
          description: room not found
    patch:
      summary: Updates a room
      tags:
      - Rooms
      parameters:
      - name: hotel_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: room updated
        '422':
          description: invalid update params
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                room:
                  type: object
                  properties:
                    name:
                      type: string
                    price:
                      type: number
                    amenities_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
    delete:
      summary: Deletes a room
      tags:
      - Rooms
      parameters:
      - name: hotel_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: room deleted
        '404':
          description: room not found
  "/api/v1/hotels":
    get:
      summary: Retrieves paginated hotels
      tags:
      - Hotels
      responses:
        '200':
          description: hotels found
    post:
      summary: Creates a hotel
      tags:
      - Hotels
      parameters: []
      responses:
        '201':
          description: hotel created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hotel:
                  type: object
                  properties:
                    name:
                      type: string
                    address:
                      type: string
                    amenities_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                  required:
                  - name
                  - address
  "/api/v1/hotels/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a hotel
      tags:
      - Hotels
      responses:
        '200':
          description: hotel found
        '404':
          description: hotel not found
    patch:
      summary: Updates a hotel
      tags:
      - Hotels
      parameters: []
      responses:
        '200':
          description: hotel updated
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hotel:
                  type: object
                  properties:
                    name:
                      type: string
                    address:
                      type: string
    delete:
      summary: Deletes a hotel
      tags:
      - Hotels
      responses:
        '204':
          description: hotel deleted
  "/api/v1/workflow/booking_requests":
    get:
      summary: List booking requests
      tags:
      - Workflow BookingRequests
      parameters:
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: per_page
        in: query
        description: Items per page
        schema:
          type: integer
      responses:
        '200':
          description: booking requests listed
  "/api/v1/workflow/booking_requests/{id}":
    get:
      summary: Retrieve a single booking request
      tags:
      - Workflow BookingRequests
      parameters:
      - name: id
        in: path
        description: BookingRequest ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: booking request found
        '404':
          description: booking request not found
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
